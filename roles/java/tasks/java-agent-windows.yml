---
# App owners would either need to chown the entire agent folder to their app's user  OR grant their app's user read/write access to the agent folder
- name: Ensures application agent {{ java_agent_dest_folder_win }} dir exists
  win_file:
    path: "{{ java_agent_dest_folder_win }}/"
    state: directory

- name: Remove previous {{ java_agent_dest_file }}
  win_file:
    path: "{{ java_agent_dest_folder_win }}/{{ java_agent_dest_file }}"
    state: absent
  changed_when: false # this ensures this task is idempotent

- name: Check if java agent exists
  win_stat:
    path: "{{ java_agent_dest_folder_win }}/javaagent.jar"
  register: previous_agent

#using Powershell as win_zip module doesn't exist in Ansible - 10/2020
- name: Backup old java agent to  C:\Windows\Temp folder
  win_shell: "Compress-Archive -Path {{ java_agent_dest_folder_win }} -DestinationPath  C:/Windows/Temp/java_agent.{{ ansible_date_time.iso8601 }}.zip -Force"
  when: previous_agent.stat.exists
  changed_when: false

- name: Clean up old agent after backup
  win_shell: "Remove-Item {{ java_agent_dest_folder_win }}/* -Recurse"
  args:
      warn: false
  when: previous_agent.stat.exists
  changed_when: false

- name: Downloading Java Agent
  win_get_url:
    url: '{{ agent_download_url.stdout }}'
    dest: '{{ java_agent_dest_folder_win }}/{{ java_agent_dest_file }}'
    force: 'true'
  changed_when: false
  register: result
  failed_when: result.status_code != 200

- name: Print download results
  debug:
    msg: "{{ result }}"

- name: Unzip the Java agent
  win_unzip:
    src: "{{ java_agent_dest_folder_win }}/{{ java_agent_dest_file }}"
    dest: "{{ java_agent_dest_folder_win }}"
    remote_src: yes
  changed_when: false

- name: Configure Java agent's controller-info.xml
  template:
    src: templates/application-agent-controller-info.xml.j2
    dest: "{{ java_agent_dest_folder_win }}/conf/controller-info.xml"
  changed_when: false

# requires Powershell 5 due to -Depth
# - name: "Get version folder name"
#   win_shell: "(Get-ChildItem {{ java_agent_dest_folder_win }} -Recurse -Depth 1 | Where{$_.Name -Match 'ver*'}  | Select-Object -ExpandProperty Name).Trim()"
#   register: ver
#   changed_when: false

- name: Find the version specific directory name
  win_find:
    paths: "{{ java_agent_dest_folder_win }}"
    patterns: "ver*"
    file_type: directory
  register: result

- name: Set the version folder fact
  set_fact:
    java_agent_ver_folder: "{{ result.files[0].path }}" # "{{ ver.stdout | regex_replace ('\\r\\n', '') }}"

- debug:
    msg: "{{ java_agent_ver_folder }}"

- name: Copy controller-info.xml to the versioned agent folder
  win_shell: "Copy-Item  {{ java_agent_dest_folder_win }}/conf/controller-info.xml  {{ java_agent_ver_folder }}/conf/ -Force"
  changed_when: false

# Update the Log4j setting to apply the desired log level to all the loggers
# listed in the {{agent_loggers}} list.
- name: Set the log level on the agent (if != info, which it is by default)
  include_role:
    name: logger
  vars:
    logger_role_standalone: false # the role is not being used on its own (so we need not check if the agent dir exists for example )
  when: agent_log_level|lower != 'info'

- name: Clean up - remove {{ java_agent_dest_file }}
  win_file:
    path: "{{ java_agent_dest_folder_win }}/{{ java_agent_dest_file }}"
    state: absent
  changed_when: false
